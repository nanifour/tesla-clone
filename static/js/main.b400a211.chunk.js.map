{"version":3,"sources":["features/car/carSlice.js","components/Header.js","components/Section.js","components/Sections.js","components/Footer.js","components/Home.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["carSlice","createSlice","name","initialState","cars","reducers","selectCars","state","car","Header","useState","burgerOpen","setburgerOpen","useSelector","console","log","Container","src","alt","map","index","href","RightMenu","CustomMenu","onClick","BurgerNav","show","CloseWrapper","CustomClose","styled","div","Menu","MenuIcon","CloseIcon","props","Section","Wrap","bottom","delay","ItemText","BottomContainer","ButtonGroup","left","LeftButton","right","RightButton","DownArrow","bgImage","btnColor","img","Sections","title","description","leftBtnText","rightBtnText","backgroundImg","midBtnText","MidButton","Footer","Home","App","className","store","configureStore","reducer","carReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b400a211.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\n\nconst initialState = {\n    cars: [ \"Model S\", \"Model 3\", \"Model X\", \"Model Y\"]\n}\n\nconst carSlice = createSlice({\n    name: \"car\",\n    initialState,\n    reducers: {}\n\n}\n)\n\n\n//selecting cars or slices and return whole array\nexport const selectCars = state => state.car.cars\n\n\nexport default carSlice.reducer\n\n\n\n\n","import React, { useState } from 'react'\nimport styled from \"styled-components\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { selectCars } from '../features/car/carSlice';\nimport { useSelector } from 'react-redux';    //react hook\n\nfunction Header() {\n\n    //Create Use State for hamburger menu open and close\n    const [burgerOpen, setburgerOpen] = useState(false); //status is closed\n    const cars = useSelector(selectCars);\n    console.log(cars);\n\n    return (\n        <div>\n            <Container>\n                {/*logo link */}\n                <a>\n                    <img src=\"/images/logo.svg\" alt=\"logo\" />\n                </a>\n                {/* menu */}\n                <Menu>\n                    {/* if cars and cars.map give it a car*/}\n                    {cars && cars.map((car, index) =>(\n                        <a key={index} href=\"#\">{car}</a> \n                    ))}   \n                    <a href=\"#\">Solar Roof</a>\n                    <a href=\"#\">Solar Panels</a>\n                    \n                </Menu>\n\n                {/* right menu */}\n                <RightMenu>\n                    <a href=\"#\">Shop</a>\n                    <a href=\"#\">Tesla Account</a> \n\n                    <CustomMenu onClick={()=>setburgerOpen(true)} />  \n                </RightMenu>\n\n                {/* burger nav menu */}\n                <BurgerNav show={burgerOpen}>  {/* show if burger is open or not*/}\n\n                    {/* custom div to push the close menu to the right */}\n                    <CloseWrapper>\n                        <CustomClose onClick={()=>setburgerOpen(false)}/> {/* when clicked, set burger to close */}\n                    </ CloseWrapper>\n\n                    <li><a href=\"#\">Existing Inventory</a></li> \n                    <li><a href=\"#\">Used Inventory</a></li> \n                    <li><a href=\"#\">Trade-In</a></li> \n                    <li><a href=\"#\">CyberTruck</a></li> \n                    <li><a href=\"#\">Roadster</a></li> \n                    <li><a href=\"#\">Semi</a></li> \n                    <li><a href=\"#\">Existing Inventory</a></li> \n                    <li><a href=\"#\">Charging</a></li> \n                    <li><a href=\"#\">Powerwall</a></li> \n                    <li><a href=\"#\">Commercial Energy</a></li>\n                    <li><a href=\"#\">Utilities</a></li> \n                    <li><a href=\"#\">Test Drive</a></li> \n                    <li><a href=\"#\">Find Us</a></li> \n                    <li><a href=\"#\">Support</a></li>  \n                    <li><a href=\"#\">United States</a></li> \n                </BurgerNav>\n\n\n            </Container>\n        </div>\n    )\n}\n\nexport default Header\n\n\nconst Container = styled.div `\n    min-height: 60px;\n    z-index: 1;\n    position: fixed; //put on top of backgroung image (always on top)\n    display: flex;\n    align-items: center;\n    padding: 0 20px;\n    top: 0; //stick it to the top\n    left: 0; //stick it to the left\n    right: 0; //stick it to the right\n    justify-content: space-between;\n    img{\n        cursor: pointer;\n    }\n\n`\n//middle menu\nconst Menu = styled.div `\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex: 1; //full weight\n    margin-left: 100px;\n\n    a{\n        font-weight: 600;\n        font-size: 15px;\n        text-transform: uppercase;\n        padding: 0 10px;\n        flex-wrap: nowrap;\n        color: black;\n    }\n\n    @media (max-width: 1200px) {\n        display: none;\n    }\n\n`\n//right menu\nconst RightMenu = styled.div `\n    display: flex;\n    align-items: center;\n\n    a{\n        color: black;\n        font-weight: 600;\n        font-size: 16px;\n        text-transform: uppercase;\n        margin-right: 10px;\n        color: black;\n\n        @media (max-width: 1198px) {\n        display: none;\n    }\n    }\n\n`\n//menu hamburger\nconst CustomMenu = styled(MenuIcon)`\n    cursor: pointer;\n\n`\n\n\n//close hambuger nav\nconst CustomClose = styled(CloseIcon)`\n    cursor: pointer;\n\n`\n\n//burger nav original orientation\nconst BurgerNav = styled.div `\n    font-weight: 500;\n    list-style: none;\n    background-color: white;\n    position: fixed; //always on the top right side\n    top: 0;\n    bottom: 0;\n    right: 0;\n    width: 310px;\n    z-index: 10;\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    text-align: start;\n    overflow-y: auto;\n\n    transform: ${ props => props.show ? 'translateX(0)' : 'translateX(100%)' }; //if its false, movve menu to the right and if its true then do not move menu\n    transition: transform 0.2s;\n\n    ::-webkit-scrollbar {\n    width: 0;  /* Remove scrollbar space */\n    background: transparent;  /* Optional: just make scrollbar invisible */\n    }\n\n    li{\n        padding: 14px 0;\n        border-bottom: 1px solid rgba(0, 0, 0, .2);\n        text-transform: uppercase;\n    }\n\n    a{\n        color: black;\n        font-size: 16px;\n    }\n\n`\n\n//push burger menu x to the right\nconst CloseWrapper = styled.div `\n    display: flex;\n    justify-content: flex-end;\n`\n\n\n","import React from 'react'\nimport styled from \"styled-components\"\nimport Fade from 'react-reveal/Fade';\n\n{ /* unpacking (object destructuring) the object by adding it to the function */}\nfunction Section() {\n    return (\n        <Wrap >  \n            \n            {/* fade text */}\n            <Fade bottom delay={1}>\n                <ItemText>\n                    {/* was props.title before unpacking */}\n                    <h1> Model S </h1>\n                    <p> Order Online for Touchless Delivery</p>\n\n                </ItemText>\n            </Fade>\n\n            <BottomContainer> \n\n            <Fade bottom>\n                <ButtonGroup>\n                    <Fade left delay={2}>\n                        <LeftButton> Custom Order </LeftButton>\n                    </Fade>\n                    {/*if right button exists then put it beside the left button */}\n                    <Fade right delay={2}>\n                        <RightButton> Existing Inventory </RightButton> \n                    </Fade>\n                </ButtonGroup>\n            </Fade>\n\n            <Fade bottom>\n                <DownArrow src =\"/images/down-arrow.svg\" />\n            </Fade>\n            </BottomContainer>\n\n        </Wrap>\n    )\n}\n\nexport default Section\n\n\n/* Styled Componenets */\nconst Wrap = styled.div`\n    width: 100vw;\n    height: 100vh;\n    z-index: 1;\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-image: url('/images/model-s.jpg');\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;  //vertical\n    align-items: center; \n   // background-image: ${props => `url(\"/images/${props.bgImage}\")`} ; //pass in background image property\n`\nconst ItemText = styled.div`\n    padding-top: 15vh;\n    text-align: center;\n\n    h1{\n        font-size: 42px;\n        font-weight: 600;\n    }\n\n    p{\n        font-size: 14px;\n        font-weight: 500;\n        color: #5E5C61;\n    }\n\n`\n\n /* Button components: display flex - left to right*/\nconst ButtonGroup = styled.div `\n    display: flex;\n    margin-bottom: 30px;\n    //wrap buttons on smaller screen\n    @media (max-width: 599px) {\n        flex-direction: column;\n    }\n`\nconst LeftButton = styled.div `\n    background-color: rgba(23,26,30,0.9);\n    height: 40px;\n    width: 256px;\n    color: white;\n    text-transform: uppercase;\n    font-size: 12px;\n    font-weight: 600;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 100px;\n    opacity: 0.9; \n    margin: 8px; \n    cursor: pointer;\n    //background-color: ${props => props.btnColor || \"black\"} ;\n`\n/* Right Button inherit left button*/\nconst RightButton = styled(LeftButton) `\n    background-color: rgba(255,255,255,0.7);\n    color: black;\n`\n\n/* Bouncing Down Arrow */\nconst DownArrow = styled.img `\n    height: 25px;\n    overflow-x: hidden;\n    animation: animateDown infinite 1.5s;\n` \n\n/* container to keep arrows and buttons closer together because the wrap is styles space-between */\n\nconst BottomContainer = styled.div `\n\n`","import React from 'react'\nimport styled from \"styled-components\"\nimport Fade from \"react-reveal/Fade\"\n\nfunction Sections({title, description, leftBtnText, rightBtnText, backgroundImg, midBtnText}) {\n    return (\n<Wrap bgImage = {backgroundImg} >  {/* pass in background image */}\n            \n            {/* fade text */}\n            <Fade bottom delay={1}>\n                <ItemText>\n                    {/* was props.title before unpacking */}\n                    <h1> {title} </h1>\n                    <p> {description}</p>\n                </ItemText>\n            </Fade>\n\n            <BottomContainer> \n\n            <Fade bottom>\n                <ButtonGroup>\n                    <Fade left delay={2}>\n                    {leftBtnText &&\n                        <LeftButton> \n                            {leftBtnText} \n                            </LeftButton>\n                    }\n                    </Fade>\n                    {/*if right button exists then put it beside the left button */}\n                    <Fade right delay={2}>\n                        {rightBtnText && \n                        <RightButton > \n                            {rightBtnText}\n                        </RightButton>\n                        } \n                    </Fade>\n\n                    {/*middle button for accessories*/}\n                    <Fade right delay={2}>\n                        {midBtnText && \n                        <MidButton > \n                            {midBtnText}\n                        </MidButton>\n                        } \n                    </Fade>\n                </ButtonGroup>\n            </Fade>\n\n            </BottomContainer>\n\n        </Wrap>\n    )\n}\n\nexport default Sections\n\n\n\n\n/* Styled Componenets */\nconst Wrap = styled.div`\n    width: 100vw;\n    height: 100vh;\n    z-index: 1;\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-image: url('/images/model-s.jpg');\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;  //vertical\n    align-items: center; \n    background-image: ${props => `url(\"/images/${props.bgImage}\")`} ; //pass in background image property\n`\nconst ItemText = styled.div`\n    padding-top: 15vh;\n    text-align: center;\n\n    h1{\n        font-size: 42px;\n        font-weight: 600;\n    }\n\n    p{\n        font-size: 14px;\n        font-weight: 500;\n        color: #5E5C61;\n    }\n`\n\n /* Button components: display flex - left to right*/\nconst ButtonGroup = styled.div `\n    display: flex;\n    margin-bottom: 50px;\n    //wrap buttons on smaller screen\n    @media (max-width: 599px) {\n        flex-direction: column;\n    }\n`\nconst LeftButton = styled.div `\n    background-color: rgba(23,26,30,0.9);\n    height: 40px;\n    width: 256px;\n    color: white;\n    text-transform: uppercase;\n    font-size: 12px;\n    font-weight: 600;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 100px;\n    opacity: 0.9; \n    margin: 8px; \n    cursor: pointer;\n    //background-color: ${props => props.btnColor || \"black\"} ;\n`\n/* Right Button inherit left button*/\nconst RightButton = styled(LeftButton) `\n    background-color: rgba(255,255,255,0.7);\n    color: black;\n`\n\n/*button for accessories black */\nconst MidButton = styled(LeftButton)`\n    background-color: black;\n    color: white;\n    margin: 50px; \n    opacity: 1;\n`\n\n/* container to keep arrows and buttons closer together because the wrap is styles space-between */\n\nconst BottomContainer = styled.div `\n\n`\n\n","import React from 'react';\nimport styled from \"styled-components\";\n\nfunction Footer() {\n    return (\n        <div>\n            <Container>\n            <Menu>\n                    {/* footer menu*/}\n                    <a href=\"#\">Tesla © 2021</a>\n                    <a href=\"#\">Privacy & Legal</a>\n                    <a href=\"#\">Contact</a>\n                    <a href=\"#\">Careers</a>\n                    <a href=\"#\">Get Newsletter</a>\n                    <a href=\"#\">News</a>\n                    <a href=\"#\">Forums</a>\n                    <a href=\"#\">Locations</a>\n                    \n            </Menu>\n\n            </Container>\n            \n        </div>\n    )\n}\n\nexport default Footer\n\nconst Container = styled.div `\n    min-height: 10px;\n    z-index: 20;\n    display: flex;\n    align-items: center;\n    //padding: 0 20px;\n    bottom: 0; //stick it to the bottom\n    left: 0; //stick it to the left\n    right: 0; //stick it to the right\n    justify-content: space-between;\n    img{\n        cursor: pointer;\n    }\n\n`\n\nconst Menu = styled.div `\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex: 1; \n    margin-top: -103px;\n\n    a{\n        font-weight: 500;\n        font-size: 13px;\n        padding: 0 10px;\n        flex-wrap: nowrap;\n\n    }\n\n`\n\n\n\n","import React from 'react'\nimport styled from \"styled-components\"\nimport Section from \"./Section\"\nimport Sections from \"./Sections\"\nimport Footer from \"./Footer\"\n\nfunction Home() {\n    return (\n        <Container>\n            {/* First Section: Model S */}\n            < Section />\n            {/* Model Y Section*/}\n            <Sections \n                title=\"Model Y\"\n                description=\"Order Online for Touchless Delivery\"\n                backgroundImg=\"model-y.jpg\"\n                leftBtnText=\"Custom Order\"\n                rightBtnText=\"Existing Inventory\"      \n            /> \n            {/* Model 3 Section*/}\n            <Sections \n                title=\"Model 3\"\n                description=\"Order Online for Touchless Delivery\"\n                backgroundImg=\"model-3.jpg\"\n                leftBtnText=\"Custom Order\"\n                rightBtnText=\"Existing Inventory\"            \n            /> \n            {/* Model X Section*/}\n            <Sections \n                title=\"Model X\"\n                description=\"Order Online for Touchless Delivery\"\n                backgroundImg=\"model-x.jpg\"\n                leftBtnText=\"Custom Order\"\n                rightBtnText=\"Existing Inventory\"              \n            /> \n            {/* Solar Panel Section*/}\n            <Sections \n                title=\"Lowest Cost Solar Panels in America\"\n                description=\"Money-back guarantee\"\n                backgroundImg=\"solar-panel.jpg\"\n                leftBtnText=\"Order Now\"\n                rightBtnText=\"Learn More\"              \n            /> \n            {/* Solar Roof Section*/}\n            <Sections \n                title=\"Solar for New Roofs\"\n                description=\"Solar Roof Costs Less Than a New Roof Plus Solar Panels\"\n                backgroundImg=\"solar-roof.jpg\"\n                leftBtnText=\"Order Now\"\n                rightBtnText=\"Learn More\"             \n            /> \n            {/* Accessories Section*/} \n            <Sections \n                title=\"Accessories\"\n                description=\"\"\n                backgroundImg=\"accessories.jpg\"\n                midBtnText=\"Shop Now\"\n            /> \n            <Footer />\n            \n        </Container>\n    )\n}\n\nexport default Home\n\n{/* Style this specific div in js instead of css*/}\n\nconst Container = styled.div`\n    height: 100vh;\n\n`\n\n","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    \n      <Header /> \n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport carReducer from \"../features/car/carSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    car: carReducer\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}